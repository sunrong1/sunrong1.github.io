import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as r,o as p}from"./app-b6P8VcbG.js";const n={};function o(s,e){return p(),a("div",null,e[0]||(e[0]=[r('<h1 id="算法-share-my-masterpiece" tabindex="-1"><a class="header-anchor" href="#算法-share-my-masterpiece"><span>算法 share My Masterpiece</span></a></h1><p>这里是筑基期的水平。</p><p>📅 分享一：树与递归——从二叉树到决策树的思考艺术<br> 时间：对应 10月底的学习刷出 my masterpiece<br> 核心目标：帮你彻底攻克递归思维，理解树结构的基础。</p><p>第一部分：重新认识递归（15分钟）<br> 用架构思维讲解：递归 = 任务分解（老板） + 汇总结果（经理） + 基准情况（员工）。<br> 现场编码：带领大家手写一个最简单的递归（如阶乘、斐波那契数列），并画出调用栈，讲解其时空消耗。</p><p>第二部分：二叉树的遍历（20分钟）<br> 深入对比：递归遍历 vs. 迭代遍历。强调为什么迭代法有时更优（避免栈溢出风险）。<br> 现场编码：白板上手写层序遍历（BFS），并强调这是理解队列和广度优先的绝佳例子。</p><p>第三部分：与AI的结合点——决策树（15分钟）<br> 概念链接：讲解最简单的机器学习模型之一——决策树。它就是一棵二叉树或多叉树。<br> 直观演示：用一个例子（如“根据天气、温度预测是否打球”）画出一棵决策树。<br> 建立关联：“我们刚才学的二叉树遍历，其实就是决策树进行预测时走过的路径。”</p><p>Q&amp;A（10分钟）<br> 课后挑战（给你自己）：在内部Wiki上分享你的笔记和代码链接，并附上一道LeetCode题（如 #104 或 #102）邀请同事们一起尝试。</p><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h2><p>这里是内容。</p><h2 id="规划方法论" tabindex="-1"><a class="header-anchor" href="#规划方法论"><span>规划方法论</span></a></h2><p>这里是内容。</p>',11)]))}const m=t(n,[["render",o]]),h=JSON.parse('{"path":"/dev/alg/alg-100%20Share.html","title":"算法 share My Masterpiece","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-09-01T00:00:00.000Z","category":["算法"],"tag":["算法基础","Masterpiece"],"star":true,"description":"算法 share My Masterpiece 这里是筑基期的水平。 📅 分享一：树与递归——从二叉树到决策树的思考艺术 时间：对应 10月底的学习刷出 my masterpiece 核心目标：帮你彻底攻克递归思维，理解树结构的基础。 第一部分：重新认识递归（15分钟） 用架构思维讲解：递归 = 任务分解（老板） + 汇总结果（经理） + 基准情况（...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"算法 share My Masterpiece\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-09-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-28T05:25:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Sun\\",\\"url\\":\\"https://sunrong.site\\"}]}"],["meta",{"property":"og:url","content":"https://sunrong1.github.io/dev/alg/alg-100%20Share.html"}],["meta",{"property":"og:site_name","content":"TestingFun"}],["meta",{"property":"og:title","content":"算法 share My Masterpiece"}],["meta",{"property":"og:description","content":"算法 share My Masterpiece 这里是筑基期的水平。 📅 分享一：树与递归——从二叉树到决策树的思考艺术 时间：对应 10月底的学习刷出 my masterpiece 核心目标：帮你彻底攻克递归思维，理解树结构的基础。 第一部分：重新认识递归（15分钟） 用架构思维讲解：递归 = 任务分解（老板） + 汇总结果（经理） + 基准情况（..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-28T05:25:44.000Z"}],["meta",{"property":"article:tag","content":"Masterpiece"}],["meta",{"property":"article:tag","content":"算法基础"}],["meta",{"property":"article:published_time","content":"2025-09-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-28T05:25:44.000Z"}]]},"git":{"createdTime":1758777550000,"updatedTime":1759037144000,"contributors":[{"name":"Dave","username":"Dave","email":"sunrong1990@126.com","commits":2,"url":"https://github.com/Dave"}]},"readingTime":{"minutes":1.41,"words":423},"filePathRelative":"dev/alg/alg-100 Share.md","excerpt":"\\n<p>这里是筑基期的水平。</p>\\n<p>📅 分享一：树与递归——从二叉树到决策树的思考艺术<br>\\n时间：对应 10月底的学习刷出 my masterpiece<br>\\n核心目标：帮你彻底攻克递归思维，理解树结构的基础。</p>\\n<p>第一部分：重新认识递归（15分钟）<br>\\n用架构思维讲解：递归 = 任务分解（老板） + 汇总结果（经理） + 基准情况（员工）。<br>\\n现场编码：带领大家手写一个最简单的递归（如阶乘、斐波那契数列），并画出调用栈，讲解其时空消耗。</p>\\n<p>第二部分：二叉树的遍历（20分钟）<br>\\n深入对比：递归遍历 vs. 迭代遍历。强调为什么迭代法有时更优（避免栈溢出风险）。<br>\\n现场编码：白板上手写层序遍历（BFS），并强调这是理解队列和广度优先的绝佳例子。</p>","autoDesc":true}');export{m as comp,h as data};
